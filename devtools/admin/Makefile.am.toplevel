# Emacs: -*- makefile -*-
#
# Toplevel Makefile.am for a YaST2 subproject
#
# -- This file is generated by y2automake - DO NOT EDIT! --
#    (Edit ./SUBDIRS instead)
#

VERSION			= $(shell cat $(srcdir)/VERSION)
RPMNAME 		= $(shell cat $(srcdir)/RPMNAME)
SUBDIRS_FILE		= $(shell test -e $(srcdir)/SUBDIRS      && echo SUBDIRS)
Y2TEXTDOMAIN_FILE	= $(shell test -e $(srcdir)/Y2TEXTDOMAIN && echo Y2TEXTDOMAIN)
ACINCLUDE_FILE		= $(shell test -e $(srcdir)/acinclude.m4 && echo acinclude.m4)

# we can specify additional files to .pot creation
POTFILES_FILE		= $(shell test -e $(srcdir)/POTFILES     && echo POTFILES)
POTFILES		= $(shell test -e $(srcdir)/POTFILES     && sed 's,^,$(srcdir)/,' < $(srcdir)/POTFILES)

# do we do Makefile.am for devtools? It is a little special...
IS_DEVTOOLS		= $(findstring yast2-devtools,$(RPMNAME))

DEVTOOLS_DIR 		= $(if $(IS_DEVTOOLS),$(srcdir)/devtools,/usr/share/YaST2/data/devtools)
ALL_PACKAGES		= $(DEVTOOLS_DIR)/admin/all-packages

EXTRA_DIST = \
	VERSION RPMNAME MAINTAINER \
	$(SUBDIRS_FILE) $(Y2TEXTDOMAIN_FILE) $(ACINCLUDE_FILE) $(POTFILES_FILE)

extra_COPYRIGHT_files = \
	README COPYING \
	COPYRIGHT.english COPYRIGHT.french COPYRIGHT.german COPYRIGHT.spanish

AUTOMAKE_OPTIONS = foreign dist-bzip2

$(RPMNAME)-$(VERSION).tar.bz2: checkpo dist-bzip2

CLEANFILES = $(RPMNAME).kdoc
MAINTAINERCLEANFILES = package/$(RPMNAME)-$(VERSION).tar.bz2 package/$(RPMNAME).spec

# all the .ycp and .y2cc files, we should separate texts from (exclude testsuite directory)
POT_SRC = $(shell find $(srcdir) -type d -name testsuite -prune , \
	-type f -name "*.ycp" -o -name "*.y2cc" | xargs grep -l '^[[:space:]]*[Tt]extdomain') \
	$(POTFILES)

# all the textdomains for .pot creation
POT_DOMAINS = \
	$(shell \
	    PSRC="$(POT_SRC)" ; \
	    if [ "$$PSRC" ] ; \
	    then \
		DOMAINS="" ; \
		for F in $$PSRC ; \
		do \
		    D=`grep '^[[:space:]]*[Tt]extdomain' $$F | head -n 1 | \
		       sed 's/^[[:space:]]*[Tt]extdomain[[:space:]]*[="][[:space:]]*\([-_a-zA-Z0-9]*\).*/\1'/` ; \
		    DOMAINS="$$D\n$$DOMAINS" ; \
		done ; \
		echo -en $$DOMAINS | sort | uniq ; \
	    fi \
	)

# the names of the actual .pot files
POT_DST = $(addprefix $(srcdir)/,$(addsuffix .pot,$(POT_DOMAINS)))

show-extra-dist:
	@echo $(EXTRA_DIST)

dist-hook:
	@for I in $(extra_COPYRIGHT_files) ; \
	do \
	    EX="" ; \
	    if test -f $(srcdir)/$$I ; then \
		EX=$(srcdir)/$$I ; \
	    elif test -f $(DEVTOOLS_DIR)/admin/copyright/$$I ; then \
		EX=$(DEVTOOLS_DIR)/admin/copyright/$$I ; \
	    else \
	        echo "Error: File $$I does not exist either in $(srcdir)/ or in $(DEVTOOLS_DIR)/admin/copyright"; \
		exit 1 ; \
	    fi ; \
	    echo "cp $$EX $(distdir)" ; \
	    cp $$EX "$(distdir)" ; \
	done

xgettext_call = \
	echo "\# LANGUAGE message file for YaST2 ($$MODULE)."; \
	echo "\# Copyright (C) `date +%Y` SuSE Linux AG, Nuernberg, Germany."; \
	echo "\# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR."; \
	echo "\#"; \
	echo "\#, fuzzy"; \
	echo "msgid \"\""; \
	echo "msgstr \"\""; \
	echo "\"Project-Id-Version: YaST2 ($$MODULE)\n\""; \
	echo -n "\"POT-Creation-Date: "; \
	    date "+%Y-%m-%d %H:%M:%S%z\\n\""; \
	echo "\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n\""; \
	echo "\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n\""; \
	echo "\"Language-Team: LANGUAGE <i18n@suse.de>\n\""; \
	echo "\"MIME-Version: 1.0\n\""; \
	echo "\"Content-Type: text/plain; charset=CHARSET\n\""; \
	echo "\"Content-Transfer-Encoding: ENCODING\n\""; \
	echo "" ; \
	$(XGETTEXT) --width=0 --language=YCP --add-comments --keyword=_:1,2 \
		    --omit-header --foreign-user --add-location \
		    --default-domain=$$MODULE --output=- $$FILES

print_xgettext_call = \
	echo "Creating $(srcdir)/$$MODULE.pot from $$FILES..."

# we need a "dummy" pot target for the case, when $(POT_DST) is empty
$(POT_DST) pot: $(POT_SRC)
	@DOMAINS="" ; \
	for F in $^ ; \
	do \
	    D=`grep '^[[:space:]]*[Tt]extdomain' $$F | head -n 1 | \
	       sed 's/^[[:space:]]*[Tt]extdomain[[:space:]]*[="][[:space:]]*\([-_a-zA-Z0-9]*\).*/\1'/` ; \
	    DOMAINS="$$D:$$F\n$$DOMAINS" ; \
	done ; \
	DOMAINS=`echo -en $$DOMAINS | sort` ; \
	MODULE=$${DOMAINS%%:*} ; \
	FILES="" ; \
	for I in $$DOMAINS ; \
	do \
	    D=$${I%%:*} ; \
	    F=$${I#*:} ; \
	    if [ "$$D" != "$$MODULE" ] ; \
	    then \
		$(print_xgettext_call) ; \
		{ $(xgettext_call) ; } > $(srcdir)/$$MODULE.pot ; \
		MODULE=$$D ; \
		FILES=$$F ; \
	    else \
		FILES="$$FILES $$F" ; \
	    fi ; \
	done ; \
	$(print_xgettext_call) ; \
	{ $(xgettext_call) ; } > $(srcdir)/$$MODULE.pot

install-pot: $(POT_DST)
	@if [ -n "$^" ] ; then \
	    echo "mkdir -p $(DESTDIR)$(potdir)" ; \
	    mkdir -p $(DESTDIR)$(potdir) ; \
	    list="$^"; \
	    for I in $$list ; \
	    do \
		echo "$(INSTALL_DATA) $$I $(DESTDIR)$(potdir)" ; \
		$(INSTALL_DATA) $$I $(DESTDIR)$(potdir) ; \
	    done ; \
	fi

all-local: $(if $(IS_DEVTOOLS),,$(POT_DST))

install-data-local: $(if $(IS_DEVTOOLS),,install-pot)
	mkdir -p $(DESTDIR)$(docdir)
	@for I in $(extra_COPYRIGHT_files) ; \
	do \
	    EX="" ; \
	    if test -f $(srcdir)/$$I ; then \
		EX=$(srcdir)/$$I ; \
	    elif test -f $(DEVTOOLS_DIR)/admin/copyright/$$I ; then \
		EX=$(DEVTOOLS_DIR)/admin/copyright/$$I ; \
	    else \
	        echo "Error: File $$I does not exist either in $(srcdir)/ or in $(DEVTOOLS_DIR)/admin/copyright"; \
		exit 1 ; \
	    fi ; \
	    echo "$(INSTALL_DATA) $$EX $(DESTDIR)$(docdir)" ; \
	    $(INSTALL_DATA) $$EX $(DESTDIR)$(docdir) ; \
	done

# TODO "if which y2tool" will be improved when we will have a generated
#      configure.in...
package-local: $(RPMNAME)-$(VERSION).tar.bz2
	rm -f package/$(RPMNAME)-*.tar.bz2
	rm -f package/*~
	rm -f package/*.bak
	rm -f package/*.auto
	mv $(RPMNAME)-$(VERSION).tar.bz2 package
	if which y2tool 2>/dev/null ; then here=`pwd`; cd $(srcdir) && y2tool create-spec < $(RPMNAME).spec.in > $$here/package/$(RPMNAME).spec ; fi

package: check-cvs-up-to-date check-tagversion check-parse check-all-packages package-local

TAGVERSION	 = y2tool tagversion
CHECKIN_BASE_DIR = /work/src/done
#CHECKIN_BASE_DIR = /tmp/done

check-cvs-up-to-date:
	cd $(srcdir) && ! cvs -q -n up 2>/dev/null | grep '^[MCAR] '

check-tagversion:
	@cd $(srcdir) && cvs -q up -p -r `$(TAGVERSION) -n` VERSION >/dev/null || ( echo "ERROR: Please run 'tagversion' first"; false )

check-parse:
	@if [ `find -type f -name "*.ycp" | wc -l` -gt 0 -a "$(RPMNAME)" != "yast2-core" ]; then	\
		parseycp -q -R;	\
	fi

check-all-packages:
	@if [ ! -e "$(ALL_PACKAGES)" ]; then				\
		echo ERROR: "Can't find $(ALL_PACKAGES)"; false;	\
	fi
	@if ! grep -q "^$(RPMNAME)	" $(ALL_PACKAGES); then		\
		echo ERROR: "$(RPMNAME) not in $(ALL_PACKAGES)"; false;	\
	fi
	@if grep -q "^$(RPMNAME)	.*?" $(ALL_PACKAGES); then	\
		echo ERROR: "$(RPMNAME) info in $(ALL_PACKAGES) contains some unknown (?) fields:";	\
		echo;							\
		grep "^$(RPMNAME)	.*?" $(ALL_PACKAGES);		\
		echo;							\
		false;							\
	fi

stable: checkin-stable

checkin-stable: package
	y2tool checkin-stable


# For po/ modules
checkpo:
	test ! -e $(srcdir)/Y2TEXTDOMAIN \
	  || { $(MAKE) -C po checkpo && $(MAKE) -C po make-pox; }
